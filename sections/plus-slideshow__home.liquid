<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">  <style> /* Start: Css for plus-slideshow */  /* Responsive layout - when screen is less than 750px wide Set font size small etc. */ .plus-slideshow-heading-{{ section.id }} {    font-size: {{section.settings.heading_font_size}}vw;  }  .plus-slideshow-subheading-{{ section.id }} {    font-size: {{ section.settings.subheading_font_size }}vw;  }  .plus-slideshow-button-{{ section.id }} {   }   @media screen and (max-width: 750px) {   .plus-slideshow-heading-{{ section.id }} {     margin: 4px 4px 4px 4px;     font-size: {{section.settings.title_font_size | plus: 1.5}}vw; 	}    .plus-slideshow-subheading-{{ section.id }} {     margin: 4px 4px 4px 4px;     font-size: {{section.settings.desc_font_size | plus: 1.5}}vw;   }    .plus-slideshow-button-{{ section.id }} {     padding: 6px 6px 6px 6px;     width: auto;     font-size: 8px;   }  }  body { overflow-x: hidden; }  #slide-window-{{ section.id }} {   width:100%;   height:100%;   overflow:hidden; }  #slides-{{ section.id }} {   height:100%;    position:absolute;    margin:0px;    padding:0px;    -webkit-transform: translate3d(0px,0px,0px);   transform: translate3d(0px,0px,0px);   transition: all 0.66s ease;    -webkit-transition: all 0.66s ease;  }  .slide-{{ section.id }} {   list-style: none;   position: relative;   float: left;   margin: 0;   padding: 0;   width: 100%;   height: 100%;   background: #ccc;   text-align: center;   line-height: auto;   background-size: cover;   background-position: 50% 50%;   color: #fff;   -webkit-transform: translate3d(0px,0px,0px);   visibility: hidden;   -webkit-transform-style: preserve-3d; }  .alive-{{ section.id }} {    visibility: visible;  }  .nav-{{ section.id }} {    position: absolute;   z-index:9;    top:50%;    cursor:pointer;    color:#fff;    opacity:0.7;    transition: all 0.66s ease;    -webkit-transition: all 0.66s ease;  }  .nav-{{ section.id }}:hover { opacity: 1.0; } #left-{{ section.id }} { left: 2%; } #right-{{ section.id }} { right: 2%; }   .nav-circle-container-{{ section.id }} {   position: absolute;   z-index: 9;   left: 0;   right: 0;   bottom: 0;   height: auto;    align: center;   text-align: center; }  .nav-circle-{{ section.id }} {   cursor: pointer;    color: #ffffff;    opacity: 0.8;    transition: all 0.66s ease;    -webkit-transition: all 0.66s ease;    margin: 10px 6px 10px 6px; }  .nav-circle-{{ section.id }}:hover { opacity: 1.0; }  /* End: Css for plus-slideshow */ </style>  <script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>  <script> /* ----------------------- Start: Script for plus-slideshow ------------------------- */    /* Debug liquid variable data via javascript console */    console.log('sectionId:', '{{ section.id }}');       /*    Intialise variable to save data for each slideshow section used on a page.   Note: Multiple slideshow can be used in a page, so this variable consist data for    all plus-slideshow section used in a page. If this variable not exist then we will    create it using var (important). So whenever section initialised we will set section     specific data in this variable. e.g.     plusSlideshowData['section-id1'] = { item: 0, total: 2 }    plusSlideshowData['section-id2'] = { item: 0, total: 3 }    */    if (!plusSlideshowData) {      var plusSlideshowData = {};   }    /* Initialise plus slidshow for given section id */    function Init_PlusSlidshow (sectionId, autoSlide, autoSlideInterval) {     console.log('Init_PlusSlidshow() sectionId:', sectionId, ' autoSlide:', autoSlide, 'autoSlideInterval:', autoSlideInterval);      /* Grab inner width of browser window (important) */     const windowWidth = window.innerWidth;     const slideCount = $('#slides-' + sectionId + ' li').length;     const slidesWidth = slideCount * windowWidth;     plusSlideshowData[sectionId] = { item: 0, total: slideCount };      /* Set slide width based on the window width  */      $(".slide-" + sectionId).css("width", windowWidth + "px" );     $("#slides-" + sectionId).css("width", slidesWidth + "px" );     $("#slides-" + sectionId + " li:nth-child(1)").addClass("alive-" + sectionId);      /* Set left button click listener (arrow navigation) */      $("#left-" + sectionId).click( function() {         Slide_PlusSlideshow("back", sectionId);      });       /* Set right button click listener (arrow navigation) */      $("#right-" + sectionId).click( function() {         Slide_PlusSlideshow("forward", sectionId);      });        /* If auto slide on for the section, Set interval to slide every x seconds */     if ( autoSlide === true ) {        setInterval( function() {          Slide_PlusSlideshow("forward", sectionId);        }, autoSlideInterval * 1000);      }     };    /* This function will set menubar area transparent for supported theme code we added */   function SetMenuBarTransparent_PlusSlidshow (textColor) {     console.log('SetMenuBarTransparent_PlusSlidshow() textColor:', textColor);      /* Start: Brooklyn theme */     /* Make top menu bar transparent and set nav menu white */     $('.site-header').css('background-color', 'transparent');     $('.site-header__logo-link').css('color', textColor);     $('.site-nav__link').css('color', textColor);     $('.burger-icon').css('background-color', textColor);     /* End: Brooklyn theme */      /* Start: Add theme here */     /* End: Add theme here */   }     /* Once document ready, this block will be called */   $(document).ready( function() {           /* Initialise slideshow for current section */     Init_PlusSlidshow('{{ section.id }}',{{ section.settings.auto_slide }},{{ section.settings.auto_slide_interval }});          /* Start: If set top menubar transparent checked then call function to do it */      {%- if section.settings.top_menu_transparent == true -%}      SetMenuBarTransparent_PlusSlidshow('{{ section.settings.top_menu_text_color }}');     {%- endif -%}      /* End: If set top menubar transparent checked then call function to do it */     });    /* Set listener to handle section load event (This event triggered by shopify customizer) */   document.addEventListener("shopify:section:load", function(event) {     /* console.log("shopify:section:load() Called event:", event); */     console.log("shopify:section:load() Called event.detail.sectionId:", event.detail.sectionId);      /* Grab loaded section id from event object */     const sectionId = event.detail.sectionId;      /* Re initialise section */     Init_PlusSlidshow(sectionId);      /* Start: If set top menubar transparent checked then call function to do it */      /* Not working as expected - Not apply color within shopify cutomiser untill Save or Publish */     {%- if section.settings.top_menu_transparent == true -%}      SetMenuBarTransparent_PlusSlidshow('{{ section.settings.top_menu_text_color }}');     {%- endif -%}      /* End: If set top menubar transparent checked then call function to do it */     });    /* When browser window resize, this event listener called multiple times until user    will continue to resize via mouse drag etc. We added logic such that when user will stop    resize then it will do necessary operation only once. */    $(window).on('resize', function() {      /* console.log('Window Resize: ', '{{ section.id }}' ); */      /* If timer variable not exist (within window object) then create it */     if (!window.timersPlusSlideshow) {        window.timersPlusSlideshow = {};     }      /* If timer set previously (for current section) then clear it, So we can set new. */     clearTimeout(window.timersPlusSlideshow['{{ section.id }}']);          /* Set timer to do some operation when timeout happen. */     window.timersPlusSlideshow['{{ section.id }}'] = setTimeout( function() {       HandleWindowResizeFinish_PlusSlidshow('{{ section.id }}');     }, 250);    });     /* This function will do necessary operation once user will finish window resize drag. */    /* We called this function from timeout block so called only once. */    function HandleWindowResizeFinish_PlusSlidshow(sectionId) {     console.log('HandleWindowResizeFinish_PlusSlidshow() sectionId:', sectionId);      /* Grab inner width of browser window (important) */      const windowWidth = window.innerWidth;     const slideCount = $('#slides-' + sectionId + ' li').length;     const slidesWidth = slideCount * windowWidth;      /* Set slide width based on the window width */      $('.slide-' + sectionId).css('width', windowWidth+'px');     $('#slides-' + sectionId).css('width', slidesWidth+'px');     $('#slides-' + sectionId + ' li:nth-child(1)').addClass('alive-' + sectionId);      /* Slide to current slide, so it will adjust slide position after resize */     const item = plusSlideshowData[sectionId].item;     SlideNow_PlusSlideshow(item, sectionId);   }       /* Called when clicked circle navigation - Slide to clicked circle slide */   function onClickCircleNav_PlusSlideshow(index, sectionId) {     /* console.log('onClickCircleNav_PlusSlideshow() index:', index, ' sectionId:', sectionId); */          /* Slide to a slide that belongs clicked circle */     SlideNow_PlusSlideshow(index, sectionId);   }     /* Slide to the given direction and section */    function Slide_PlusSlideshow(direction, sectionId) {      /* console.log('Slide_PlusSlideshow() direction:', direction, ' sectionId:', sectionId); */      let target;      if (direction == 'back') {        target = plusSlideshowData[sectionId].item - 1;      }           if (direction == 'forward') {        target = plusSlideshowData[sectionId].item + 1;      }       if ( target == -1 ) {        SlideNow_PlusSlideshow(plusSlideshowData[sectionId].total - 1, sectionId);     } else if ( target == plusSlideshowData[sectionId].total ) {        SlideNow_PlusSlideshow(0, sectionId);     } else {        SlideNow_PlusSlideshow(target, sectionId);     }   }    function SlideNow_PlusSlideshow(target, sectionId) {     /* console.log('SlideNow_PlusSlideshow() target:', target, ' sectionId:', sectionId); */      const windowWidth = window.innerWidth;     const margin = windowWidth * target;     const actualtarget = target + 1;          $("#slides-" + sectionId + " li:nth-child(" + actualtarget + ")").addClass('alive-' + sectionId);          $("#slides-" + sectionId).css('transform', 'translate3d(-' + margin + 'px,0px,0px)');      /* Set currently active slide number */      plusSlideshowData[sectionId].item = target;      /* Set solid circle class for current slide */      setActiveCircle_PlusSlideshow(sectionId);   }    /* Set dark circle (within circle navigation) for active slide for a given sectionId */   function setActiveCircle_PlusSlideshow(sectionId) {            /* Set all circle class as empty circle */       const totalSlides = plusSlideshowData[sectionId].total;       for (var i = 0; i < totalSlides; i++ ) {         $("#nav-circle-" + sectionId + "-" + i).removeClass("fa-circle").addClass("fa-circle-o");       }        /* Set solid circle class for current active slide */      const currentIndex = plusSlideshowData[sectionId].item;       $("#nav-circle-" + sectionId + "-" + currentIndex).removeClass("fa-circle-o").addClass("fa-circle");     }  /* ----------------------- End: Script for plus-slideshow ------------------------- */ </script>  <div id="plus-slideshow-{{ section.id }}"      style="width: 100vw;             {%- if section.settings.full_height == false -%}height: {{ section.settings.content_height }}px;{%- endif -%}             {%- if section.settings.full_height == true -%}height: 100vh;{%- endif -%}             margin-left: calc((100% - 100vw)/2);             margin-top: {{ section.settings.margin_top }}px;             position: relative;             overflow: hidden;             ">    <div id="slide-window-{{ section.id }}">     <ol id="slides-{{ section.id }}" start="1">       {%- for block in section.blocks -%}       <li class="slide-{{ section.id }} color-{{ forloop.index0 }} alive-{{ section.id }}"            style="background-image:url({{ block.settings.slide_image | img_url: '1024x' }});" >                   <div style="display: flex;                      flex-direction: column;                      justify-content: {{ block.settings.content_valign }};                      align-items: {{ block.settings.content_align }};                      width: 100%;                      height: 100%;                      padding: {{ block.settings.content_top_bottom_padding }}px {{ block.settings.content_left_right_padding }}px {{ block.settings.content_top_bottom_padding }}px {{ block.settings.content_left_right_padding }}px;                     border: 0px solid #ff0000;                      ">           {%- if block.settings.subheading != blank -%}               <h2 class="plus-slideshow-subheading-{{ section.id }}"                   style="font-size: {{ block.settings.subheading_font_size }}px;                          color: {{ block.settings.text_color }};                          ">                 {{ block.settings.subheading | escape }}               </h2>           {%- endif -%}           {%- if block.settings.heading != blank -%}             <h1 class="plus-slideshow-heading-{{ section.id }}"                 style="font-size: {{ block.settings.heading_font_size }}px;                    color: {{ block.settings.text_color }};                    ">               {{ block.settings.heading | escape }}             </h1>           {%- endif -%}           {%- if block.settings.link_text != blank -%}             <a class="btn plus-slideshow-button-{{ section.id }}"                style="background: {{ block.settings.button_bg_color }};                      color: {{ block.settings.button_text_color }}"                  {%- if block.settings.link != blank -%}                 href="{{ block.settings.link }}"                 {%- else -%}                 href="#"                 {%- endif -%}             >                {{ block.settings.link_text | escape }}             </a>           {%- endif -%}         </div>       </li>       {%- endfor -%}     </ol>      {% if section.settings.show_arrow_nav == true and section.blocks.size > 1 %}     <span class="nav-{{ section.id }} fa fa-chevron-left fa-3x" id="left-{{ section.id }}"></span>     <span class="nav-{{ section.id }} fa fa-chevron-right fa-3x" id="right-{{ section.id }}"></span>     {%- endif -%}          {% if section.settings.show_circle_nav == true and section.blocks.size > 1 %}     <div class="nav-circle-container-{{ section.id }}" >        {%- for block in section.blocks -%}         {%- if forloop.index0 == 0 -%}           <span              class="nav-circle-{{ section.id }} fa fa-circle fa-1x"              id="nav-circle-{{ section.id }}-{{ forloop.index0 }}"              onClick="onClickCircleNav_PlusSlideshow({{ forloop.index0 }}, '{{ section.id }}')"             ></span>         {%- else -%}           <span              class="nav-circle-{{ section.id }} fa fa-circle-o fa-1x"              id="nav-circle-{{ section.id }}-{{ forloop.index0 }}"              onClick="onClickCircleNav_PlusSlideshow({{ forloop.index0 }}, '{{ section.id }}')"             ></span>         {%- endif -%}       {%- endfor -%}     </div>     {%- endif -%}    </div>  </div> <div style="width: 100%; height: {{section.settings.bottom_space}}px;"></div>   {% schema %} {   "name": "Plus - Slideshow",        "settings": [     {       "type": "checkbox",       "id": "full_height",       "default": false,       "label": "Set Full Screen Height"     },     {       "type": "range",       "id": "content_height",       "min": 100,       "max": 1000,       "step": 50,       "unit": "px",       "label": "Slider height (If not full screen)",       "default": 600     },     {       "type": "checkbox",       "id": "show_arrow_nav",       "default": true,       "label": "Show arrow navigation"     },     {       "type": "checkbox",       "id": "show_circle_nav",       "default": true,       "label": "Show circle navigation"     },     {       "type": "checkbox",       "id": "auto_slide",       "default": false,       "label": "Auto slide"     },     {       "type": "range",       "id": "auto_slide_interval",       "min": 3,       "max": 9,       "step": 1,       "label": "Auto slide interval (In Seconds)",       "default": 3     },     {       "type": "header",       "content": "Section Config"     },     {       "type": "checkbox",       "id": "top_menu_transparent",       "default": false,       "label": "Set top menubar transparent (If supported) (No preview)"     },     {       "type": "color",       "id": "top_menu_text_color",       "label": "Top menu text color (If menubar set transparent) (No preview)",       "default": "#FFFFFF"     },     {       "type": "range",       "id": "margin_top",       "min": -300,       "max": 100,       "step": 4,       "label": "Section top margin",       "default": 0     },     {       "type": "range",       "id": "bottom_space",       "min": 0,       "max": 200,       "step": 5,       "unit": "px",       "label": "Space after section",       "default": 0     }   ],    "max_blocks": 6,    "blocks": [     {       "type": "plus_slide",       "name": {          "en": "Slide",         "fr": "Slide"       },       "settings": [         {           "type": "image_picker",           "id": "slide_image",           "label": {             "en": "Image",             "fr": "Image"           }         },         {           "type": "header",           "content": "Heading & Subheading"         },         {           "type": "text",           "id": "heading",           "label": "Heading",           "default": "This Is Heading",           "placeholder": "Enter Heading"         },         {           "type": "range",           "id": "heading_font_size",           "min": 8,           "max": 100,           "step": 1,           "label": "Heading font size (px)",           "default": 30         },         {           "type": "text",           "id": "subheading",           "label": "Subheading",           "default": "This Is Subheading",           "placeholder": "Enter Subheading"         },         {           "type": "range",           "id": "subheading_font_size",           "min": 8,           "max": 40,           "step": 1,           "label": "Subheading font size (px)",           "default": 18         },         {           "type": "color",           "id": "text_color",           "label": "Text color",           "default": "#FFFFFF"         },         {           "type": "header",           "content": "Overlay Button"         },         {           "type": "text",           "id": "link_text",           "label": "Text",           "default": "View more"         },         {           "type": "url",           "id": "link",           "label": "Link"         },         {           "type": "color",           "id": "button_bg_color",           "label": "Button bg color",           "default": "#ffffff"         },         {           "type": "color",           "id": "button_text_color",           "label": "Button text color",           "default": "#000000"         },         {           "type": "header",           "content": "Content Alignment"         },         {           "type": "select",           "id": "content_align",           "label": "Horizontal alignment",           "default": "center",           "options": [             { "value": "flex-start", "label": "Left" },             { "value": "center", "label": "Center" },             { "value": "flex-end", "label": "Right" }           ]         },         {           "type": "range",           "id": "content_left_right_padding",           "min": 0,           "max": 200,           "step": 2,           "label": "Padding from left/right (px)",           "default": 50         },         {           "type": "select",           "id": "content_valign",           "label": "Vertical alignment",           "default": "center",           "options": [             { "value": "flex-start", "label": "Top" },             { "value": "center", "label": "Middle" },             { "value": "flex-end", "label": "Bottom" }           ]         },         {           "type": "range",           "id": "content_top_bottom_padding",           "min": 0,           "max": 200,           "step": 2,           "label": "Padding from top/bottom (px)",           "default": 40         }       ]     }   ],    "presets": [     {       "name": "Plus - Slideshow",       "category": {         "de": "Creative Sections(PlusPage)",         "en": "Creative Sections(PlusPage)",         "fi": "Creative Sections(PlusPage)",         "fr": "Creative Sections(PlusPage)"       },       "blocks": [         { "type": "plus_slide" }       ]     }   ]  } {% endschema %}  {% stylesheet %} {% endstylesheet %}  {% javascript %} {% endjavascript %}